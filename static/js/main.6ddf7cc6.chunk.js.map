{"version":3,"sources":["assets/thp/eventMap.png","assets/thp/PledgeMap.png","assets/thp/THP_logo_horizontal.png","assets/thp/TH1.jpg","assets/thp/TH2.jpg","serviceWorker.js","utils/index.js","state/networks/reducers.js","state/networks/actions.js","state/selections/selectors.js","state/networks/selectors.js","state/networks/index.js","state/networks/logic.js","state/selections/reducers.js","state/constants/index.js","state/selections/actions.js","state/selections/index.js","state/selections/logic.js","state/store.js","components/Map/constants.js","components/Map/MapInset.js","components/Map/index.jsx","components/SubmitButton/index.jsx","components/Filters/index.jsx","components/NetworkCard/index.js","components/ListView/index.js","components/About/index.jsx","components/Resources/constants.js","components/Resources/index.jsx","components/NavMenu/index.jsx","components/PageFooter/index.jsx","components/NoWebGl/index.jsx","components/NetworksTable/index.jsx","containers/DefaultLayout.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","makeConstant","branchOfState","actionType","standardizePhoneNumber","hotlineNumber","length","replace","REQUEST_NETWORKS","SET_NETWORKS","REQUEST_FAILED","SET_PAGE_OF_NETWORKS","initialState","allNetworks","eventReducer","state","type","payload","error","console","log","requestNetworks","setPageOfNetworks","getSelectedCategories","selections","categories","getSearchLocation","searchLocation","getHoveredPointId","hoveredPointId","getUsState","usState","getViewState","createSelector","lat","mapboxgl","getAllNetworks","networks","getFilteredNetworks","filter","network","includes","category","getNetworksInArea","lookup","LatLng","Number","lng","city","computeDistanceBetween","sort","a","b","getVisibleCards","getBoundingBox","cards","reduce","acc","cur","index","extend","LngLatBounds","bbox","actions","logics","createLogic","process","deps","dispatch","done","httpClient","firebaseUrl","requestPage","url","get","then","snapshot","pageOfNetworks","body","documents","doc","data","fields","unpackedData","mapValues","object","newValues","values","integerValue","map","obj","id","push","processOnePage","nextPageToken","reducers","selectors","SET_CATEGORY_FILTERS","SET_LAT_LNG","SET_HOVERED_POINT","SET_US_STATE","RESET_TO_DEFAULTS","options","view","language","community","setCategoryFilters","setLatLng","setHoveredPoint","setUsState","resetToDefaultView","action","center","reduxLogicDependencies","request","logicMiddleware","createLogicMiddleware","middleware","applyMiddleware","LAYER_NAME","accessToken","mapboxStyle","MapInset","props","addClickListener","bind","this","initializeMap","selectedCategories","getLayer","filterArray","setFilter","prevProps","isEqual","setFilters","bounds","setBounds","on","stateName","mapId","Map","container","doubleClickZoom","dragPan","scrollZoom","style","fitBounds","easeTo","duration","linear","setLayoutProperty","viewState","mapClassNames","classNames","hidden","inset","Fragment","className","data-bounds","React","Component","defaultProps","selectedState","MapView","filterDistrict","includedStates","addPopups","handleReset","insetOnClickEvent","handleClickOnInset","popoverColor","resize","hoveredPopup","remove","setInitialState","setState","hoverPoint","unHoverPoint","e","dataBounds","target","parentNode","getAttribute","split","boundsOne","boundsTwo","concat","padding","top","bottom","left","right","maxZoom","layer","Popup","closeButton","closeOnClick","features","queryRenderedFeatures","point","layers","getCanvas","cursor","link","feature","properties","popoverClassName","join","toLowerCase","generalForm","supportOfferForm","supportRequestForm","facebookPage","setLngLat","geometry","coordinates","setHTML","title","addTo","hoveredPinId","setFeatureState","source","sourceLayer","hover","document","getElementsByClassName","Array","from","forEach","ele","value","querySelector","usaButton","createElement","innerHTML","addEventListener","appendChild","addControl","NavigationControl","disable","dragRotate","touchZoomRotate","disableRotation","makeZoomToNationalButton","MapboxGeocoder","countries","marker","zoom","flyTo","result","returned","place_type","setPaintProperty","resetSelections","SubmitButton","description","href","CheckboxGroup","Group","Filters","indeterminate","checkAll","onChange","checkedList","onCheckAllChange","checked","visible","absolute","key","NetworkCard","address","neighborhood","geocodeStatus","country","onMouseEnter","onMouseLeave","justify","rel","Title","NoNetworkSection","level","InfoCircleOutlined","ListView","visibleCards","About","src","thpLogo","alt","span","eventMap","th1","th2","pledgeMap","resourceList","Resources","itemLayout","dataSource","renderItem","resource","Item","Meta","name","NavMenu","handleNav","mode","theme","lineHeight","onClick","selectedKeys","pathname","to","exact","Footer","PageFooter","textAlign","class","NetworksTable","useState","searchCol","setSearchCol","getColumnSearchProps","dataIndex","secondaryDataIndex","filterDropdown","setSelectedKeys","confirm","clearFilters","placeholder","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","size","marginRight","filterIcon","filtered","color","undefined","onFilter","record","render","text","tableColumns","fixed","sorter","localeCompare","defaultSortOrder","filters","form","ghost","rowKey","columns","pagination","pageSize","hideOnSinglePage","scroll","x","Header","Content","Sider","DefaultLayout","isMobile","collapsed","toggleCollapsibleMenu","checkIfMobile","innerWidth","renderPageHeader","MenuFoldOutlined","trigger","removeEventListener","filteredNetworks","masterBbox","path","supported","NoWebGl","connect","networkStateBranch","selectionStateBranch","Store","createStore","combineReducers","App","store","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6ddf7cc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eventMap.91377ca8.png\";","module.exports = __webpack_public_path__ + \"static/media/PledgeMap.bbb71791.png\";","module.exports = __webpack_public_path__ + \"static/media/THP_logo_horizontal.284a5415.png\";","module.exports = __webpack_public_path__ + \"static/media/TH1.d9ab3f46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TH2.83488dfb.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const makeConstant = (branchOfState, actionType) => `${branchOfState}-${actionType}`;\n\nexport const standardizePhoneNumber = (hotlineNumber) => {\n  if (!hotlineNumber) return ''\n  // returns the input as is if the field value includes notes (ie, multiple phone numbers)\n  if (hotlineNumber.length > 14) return hotlineNumber\n  let cleaned = ('' + hotlineNumber).replace(/\\D/g, '')\n  let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n  return match ? `(${match[1]}) ${match[2]}-${match[3]}` : ''\n}\n","import {\n  makeConstant\n} from \"../../utils\";\nconst STATE_BRANCH = 'EVENTS';\n\nexport const REQUEST_NETWORKS = makeConstant(STATE_BRANCH, \"REQUEST_NETWORKS\");\nexport const SET_NETWORKS = makeConstant(STATE_BRANCH, \"SET_NETWORKS\");\nexport const REQUEST_FAILED = makeConstant(STATE_BRANCH, \"REQUEST_FAILED\");\nexport const SET_PAGE_OF_NETWORKS = makeConstant(STATE_BRANCH, \"SET_PAGE_OF_NETWORKS\");\n\nconst initialState = {\n  allNetworks: [],\n};\n\n\nconst eventReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_NETWORKS:\n      return {\n        ...state,\n        allNetworks: payload,\n        error: null\n      };\n    case SET_PAGE_OF_NETWORKS:\n      return {\n        ...state,\n        allNetworks: [...state.allNetworks, ...payload],\n        error: null\n      };\n    case REQUEST_FAILED:\n      console.log(`REQUEST_FAILED: ${payload}`);\n      return {\n        ...state,\n        error: payload\n      };\n     default:\n      return state;\n  }\n};\n\nexport default eventReducer;","import {\n  REQUEST_NETWORKS, SET_PAGE_OF_NETWORKS,\n} from './reducers';\n\n\nexport const requestNetworks = () => ({\n  type: REQUEST_NETWORKS,\n});\n\nexport const setPageOfNetworks = (payload) => ({\n  type: SET_PAGE_OF_NETWORKS,\n  payload\n})","import { createSelector } from 'reselect';\n\nexport const getSelectedCategories = (state) => state.selections.categories;\n// export const getViewState = state => state.selections.view;\nexport const getSearchLocation = state => state.selections.searchLocation;\nexport const getHoveredPointId = state => state.selections.hoveredPointId;\nexport const getUsState = state => state.selections.usState;\n\nexport const getViewState = createSelector([getSearchLocation, getUsState], (searchLocation, usState) => {\n    if (searchLocation.lat || usState) {\n        return 'list';\n    }\n    return 'default';\n})","import { createSelector } from 'reselect';\nimport { filter } from 'lodash';\nimport {\n    computeDistanceBetween,\n    LatLng\n} from 'spherical-geometry-js';\n\nimport { getSelectedCategories, getSearchLocation, getUsState } from '../selections/selectors';\nconst mapboxgl = window.mapboxgl;\n\nexport const getAllNetworks = state => state.networks.allNetworks;\n\nexport const getFilteredNetworks = createSelector([getAllNetworks, getSelectedCategories], (networks, categories) => {\n    if (!categories.length) {\n        return [];\n    }\n    return filter(networks, (network) => {\n        return categories.includes(network.category)\n    })\n})\n\n\nexport const getNetworksInArea = createSelector([getAllNetworks, getSearchLocation, getUsState], (allNetworks, location, usState) => {\n            if (!location.lat && !usState) {\n                return [];\n            }\n            // statewide search\n            if (!location.lat) {\n                return allNetworks.filter((network) => network.state && network.state === usState);\n                \n            }\n            const lookup = new LatLng(Number(location.lat), Number(location.lng));\n            const maxMeters = 50 * 1609.34; // Convert miles to meters before filtering\n            return allNetworks.filter((network) => {\n                // include statewide networks\n                if (network.state && !network.city && network.state === usState) {\n                    return true;\n                } \n\n                const curDistance = computeDistanceBetween(\n                    lookup,\n                    new LatLng(Number(network.lat), Number(network.lng)),\n                );\n                return curDistance < maxMeters;\n                \n            }).sort((a, b) => {\n                const aDistance = computeDistanceBetween(\n                    lookup,\n                    new LatLng(Number(a.lat), Number(a.lng)),\n                );\n                const bDistance = computeDistanceBetween(\n                    lookup,\n                    new LatLng(Number(b.lat), Number(b.lng)),\n                );\n                return aDistance - bDistance;\n            });\n    \n})\n\nexport const getVisibleCards = createSelector([getNetworksInArea, getSelectedCategories], (networks, categories) => {\n    if (!categories.length) {\n        return [];\n    }\n    return filter(networks, (network) => {\n        return categories.includes(network.category)\n    })\n})\n\nexport const getBoundingBox = createSelector([getNetworksInArea], (cards) => {\n    if (!cards.length) {\n        return null;\n    }\n    return cards.reduce((acc, cur, index) => {\n        if (index > 0) {\n            acc = acc.extend(new mapboxgl.LngLatBounds(cur.bbox));\n        }\n        return acc;\n    }, new mapboxgl.LngLatBounds(cards[0].bbox));\n})","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","import {\n  createLogic\n} from \"redux-logic\";\nimport {\n  mapValues,\n  values,\n  map,\n} from 'lodash';\nimport {\n  REQUEST_NETWORKS,\n} from \"./reducers\";\n\nimport {\n  setPageOfNetworks\n} from \"./actions\";\n\nconst fetchNetworks = createLogic({\n  type: REQUEST_NETWORKS,\n\n  process(deps, dispatch, done) {\n    const {\n      httpClient,\n      firebaseUrl,\n    } = deps;\n    const processOnePage = (snapshot) => {\n      return snapshot.body.documents.reduce((acc, doc) => {\n        const data = doc.fields;\n        const unpackedData = mapValues(data, (object) => {\n          let newValues = values(object)[0];\n          if (object.integerValue) {\n            newValues = Number(newValues);\n          }\n          if (newValues.values) {\n            newValues = map(newValues.values, obj => {\n              return values(obj)[0];\n            });\n          }\n          return newValues;\n        })\n        if (Number(unpackedData.id)) {\n          acc.push(unpackedData);\n        }\n        return acc;\n      }, []);\n    }\n\n    const requestPage = (url) => {\n      return httpClient.get(url)\n        .then((snapshot) => {\n          const pageOfNetworks = processOnePage(snapshot)\n          dispatch(setPageOfNetworks(pageOfNetworks))\n          if (snapshot.body.nextPageToken) {\n            const url = `${firebaseUrl}/?pageToken=${snapshot.body.nextPageToken}`\n            return requestPage(url)\n          }\n          done();\n        })\n    }\n    requestPage(firebaseUrl);\n  }\n})\n\n\nexport default [\n  fetchNetworks,\n];","import {\n  makeConstant\n} from \"../../utils\";\nimport { GENERAL, REQUEST_SUPPORT, OFFER_SUPPORT, INFORMATION } from \"../constants\";\n\nconst STATE_BRANCH = 'SELECTIONS';\nexport const SET_CATEGORY_FILTERS = makeConstant(STATE_BRANCH, 'FILTER_BY_CATEGORY');\nexport const SET_LAT_LNG = makeConstant(STATE_BRANCH, 'SET_LAT_LNG');\nexport const SET_HOVERED_POINT = makeConstant(STATE_BRANCH, 'SET_HOVERED_POINT');\nexport const SET_US_STATE = makeConstant(STATE_BRANCH, \"SET_US_STATE\");\nexport const RESET_TO_DEFAULTS = makeConstant(STATE_BRANCH, \"RESET_TO_DEFAULTS\");\n\nexport const options = [GENERAL, REQUEST_SUPPORT, OFFER_SUPPORT, INFORMATION];\n\nconst initialState = {\n  view: 'default',\n  categories: options,\n  language: '',\n  community: '',\n  searchLocation: {},\n  hoveredPointId: null,\n  usState: '',\n};\n\nconst selectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CATEGORY_FILTERS:\n      return {\n        ...state,\n        categories: action.payload,\n      }\n      case SET_LAT_LNG:\n        return {\n          ...state,\n          searchLocation: action.payload.center,\n          usState: action.payload.usState,\n        }\n      case RESET_TO_DEFAULTS:\n        return {\n          ...state,\n          searchLocation: {},\n          usState: ''\n        }\n      case SET_HOVERED_POINT: \n        return {\n          ...state,\n          hoveredPointId: action.payload,\n        }\n        default:\n          return state;\n  }\n};\n\nexport default selectionReducer;","// export const firebaseUrl = process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_PROD_FIRESTORE_URL : process.env.REACT_APP_TESTING_FIRESTORE_URL;\nexport const GENERAL = 'General';\nexport const OFFER_SUPPORT = 'Offer Support';\nexport const REQUEST_SUPPORT = 'Request Support';\nexport const INFORMATION = 'Community';\nexport const firebaseUrl = \"https://firestore.googleapis.com/v1/projects/townhallproject-86312/databases/(default)/documents/mutual_aid_networks\"","import {\n    SET_CATEGORY_FILTERS,\n    SET_LAT_LNG,\n    SET_HOVERED_POINT,\n    SET_US_STATE,\n    RESET_TO_DEFAULTS\n} from \"./reducers\";\n\nexport const setCategoryFilters = (payload) => ({\n    type: SET_CATEGORY_FILTERS,\n    payload\n});\n\nexport const setLatLng = (payload) => ({\n    type: SET_LAT_LNG,\n    payload,\n});\n\nexport const setHoveredPoint = (payload) => ({\n    type: SET_HOVERED_POINT,\n    payload,\n});\n\nexport const setUsState = (payload) => ({\n    type: SET_US_STATE,\n    payload,\n});\n\nexport const resetToDefaultView = () => ({\n    type: RESET_TO_DEFAULTS,\n});","import * as actions from \"./actions\";\nimport reducers from \"./reducers\";\nimport * as selectors from \"./selectors\";\nimport logics from \"./logic\";\n\nexport default {\n    actions,\n    logics,\n    reducers,\n    selectors,\n};","// import { createLogic } from \"redux-logic\"\n\n\nexport default [];","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { createLogicMiddleware } from 'redux-logic';\nimport request from 'superagent';\n\nimport networks from './networks';\nimport selections from './selections';\n\n\nimport { firebaseUrl } from '../state/constants';\n\nconst reducers = {\n  networks: networks.reducers,\n  selections: selections.reducers,\n};\n\nconst logics = [\n  ...networks.logics,\n  ...selections.logics,\n];\n\nconst reduxLogicDependencies = {\n  firebaseUrl: firebaseUrl,\n  httpClient: request,\n};\n\nconst logicMiddleware = createLogicMiddleware(logics, reduxLogicDependencies);\n\nlet middleware = applyMiddleware(\n  logicMiddleware\n);\n\nif (process.env.NODE_ENV === `development` && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  middleware = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(middleware);\n}\n\nexport default () => {\n  const store = createStore(\n    combineReducers(reducers),\n    middleware\n  );\n\n  return store;\n};","export const LAYER_NAME = 'networks-dots';\nexport const accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\nexport const mapboxStyle = process.env.REACT_APP_MAPBOX_STYLE_URL || \"mapbox://styles/townhallproject/ck87rw1kt1g821is46uvwm08k\";","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport {\n  LAYER_NAME, \n  accessToken,\n  mapboxStyle\n} from './constants';\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapInset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addClickListener = this.addClickListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  setFilters() {\n    const {\n      selectedCategories\n    } = this.props;\n    let layer = this.map.getLayer(LAYER_NAME);\n    if (!layer) {\n      return;\n    }\n    let filterArray = ['any', ...selectedCategories.map((category) => ['==', ['get', 'category'], category])];\n    this.map.setFilter(LAYER_NAME, filterArray);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      selectedCategories,\n    } = this.props;\n\n    if (!isEqual(selectedCategories, prevProps.selectedCategories)) {\n      this.setFilters();\n    }\n  }\n\n  addClickListener() {\n    const {\n      bounds,\n      setBounds,\n    } = this.props;\n    const { map } = this;\n\n    map.on('click', () => {\n      setBounds(bounds, this.props.stateName);\n    });\n  }\n\n  initializeMap() {\n    const {\n      bounds,\n      mapId,\n    } = this.props;\n\n    mapboxgl.accessToken =\n        accessToken;\n\n    this.map = new mapboxgl.Map({\n      container: mapId,\n      doubleClickZoom: false,\n      dragPan: false,\n      scrollZoom: false,\n      style: mapboxStyle,\n    });\n\n    this.map.fitBounds(bounds, {\n      easeTo: { duration: 0 },\n      linear: true,\n    });\n    // map on 'load'\n    this.map.on('load', () => {\n      this.addClickListener();\n      this.map.setLayoutProperty(LAYER_NAME, 'visibility', 'visible')\n    });\n  }\n\n  render() {\n    const {\n      viewState,\n      mapId,\n    } = this.props;\n    const mapClassNames = classNames({\n      hidden: viewState === 'list',\n      inset: true,\n    });\n    return (\n      <React.Fragment>\n        <div id={mapId} className={mapClassNames} data-bounds={this.props.bounds} />\n      </React.Fragment>\n    );\n  }\n}\n\nMapInset.propTypes = {\n  bounds: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  mapId: PropTypes.string.isRequired,\n  stateName: PropTypes.string.isRequired,\n};\n\nMapInset.defaultProps = {\n  selectedState: '',\n};\n\nexport default MapInset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  filter,\n  isEqual\n} from 'lodash';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport MapInset from './MapInset';\nimport './style.scss';\nimport './popover.scss';\nimport './popovertip.scss';\nimport './popover_implementation.scss';\nimport {\n  LAYER_NAME,\n  accessToken,\n  mapboxStyle\n} from './constants';\nimport { standardizePhoneNumber } from '../../utils/index'\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterDistrict = ['any'];\n    this.includedStates = ['in', 'NAME'];\n\n    this.addPopups = this.addPopups.bind(this);\n    this.addClickListener = this.addClickListener.bind(this);\n    this.setFilters = this.setFilters.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.insetOnClickEvent = this.insetOnClickEvent.bind(this);\n    this.handleClickOnInset = this.handleClickOnInset.bind(this);\n    this.initializeMap = this.initializeMap.bind(this);\n    this.state = {\n      popoverColor: 'popover-general-icon',\n      bbox: null,\n    };\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  componentDidUpdate(prevProps) {\n\n    const {\n      hoveredPointId,\n      viewState,\n      bbox,\n      selectedCategories\n    } = this.props;\n    this.map.resize();\n    // changed filters\n    if (!isEqual(selectedCategories, prevProps.selectedCategories)) {\n      this.setFilters();\n    }\n    // toggled view between full map and zoom\n    if (prevProps.viewState !== viewState) {\n      this.hoveredPopup.remove(); //close any open popup\n      if (viewState === 'default') {\n        this.setInitialState();\n      }\n    }\n    // if a bounding box has been set before render, fix the bounds and clear\n    // for changing map zoom and size\n\n    if ((this.state.bbox && viewState === 'list')) {\n      this.fitBounds(this.state.bbox);\n      this.setState({\n        bbox: null\n      })\n    }\n    if (bbox && viewState === 'list' && bbox !== prevProps.bbox) {\n      this.fitBounds(bbox);\n    }\n\n    if (hoveredPointId) {\n      this.hoverPoint(hoveredPointId)\n    }\n    if (prevProps.hoveredPointId && prevProps.hoveredPointId !== hoveredPointId) {\n      this.unHoverPoint(prevProps.hoveredPointId);\n    }\n  }\n\n  insetOnClickEvent(e) {\n    this.setState({\n      inset: false\n    });\n    const dataBounds = e.target.parentNode.parentNode.getAttribute('data-bounds').split(',');\n    const boundsOne = [Number(dataBounds[0]), Number(dataBounds[1])];\n    const boundsTwo = [Number(dataBounds[2]), Number(dataBounds[3])];\n    const bounds = boundsOne.concat(boundsTwo);\n    this.fitBounds(bounds);\n  }\n\n  fitBounds(bounds) {\n    this.map.fitBounds(bounds, {\n      padding: {\n        top: 10,\n        bottom: 25,\n        left: 15,\n        right: 5\n      },\n      maxZoom: 8\n    })\n  }\n\n  addPopups(layer) {\n    const {\n      map\n    } = this;\n\n    this.hoveredPopup = new mapboxgl.Popup({\n      closeButton: true,\n      closeOnClick: true,\n    });\n\n    map.on('mousemove', (e) => {\n      let layerCheck = this.map.getLayer(LAYER_NAME);\n      if (!layerCheck) {\n        return;\n      }\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [layer]\n      });\n      // Change the cursor style as a UI indicator.\n      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n      if (features.length) {\n        const feature = features[0];\n        const {\n          properties\n        } = feature;\n        const popoverClassName = `popover-${feature.properties.category.split(' ').join('-').toLowerCase()}`\n        this.setState({\n          popoverColor: popoverClassName\n        });\n        this.props.setHoveredPoint(feature.id);\n        let link;\n        if (properties.generalForm) {\n          link = `<a rel=\"noopener noreferrer\" target=\"_blank\" href=${properties.generalForm}>Link to form</a>`\n        } else if (properties.supportOfferForm && properties.supportRequestForm) {\n          link = `<a rel=\"noopener noreferrer\" class=\"side-by-side\" target=\"_blank\" href=${properties.supportOfferForm}>Offer support</a><a class=\"side-by-side\" target=\"_blank\" href=${properties.supportRequestForm}>Request support</a>`\n        } else if (properties.supportOfferForm) {\n          link = `<a rel=\"noopener noreferrer\" href=${properties.supportOfferForm}>Offer support</a>`;\n        } else if (properties.supportRequestForm) {\n          link = `<a rel=\"noopener noreferrer\" href=${properties.supportRequestForm}>Request support</a>`;\n        } else {\n          link = `<a rel=\"noopener noreferrer\" href=${properties.facebookPage}>Link to group</a>`;\n        }\n        let location = properties.city ? `${properties.city}, ${properties.state}` : properties.state;\n\n        return this.hoveredPopup.setLngLat(feature.geometry.coordinates)\n          .setHTML(`\n            <h4>${properties.title}</h4>\n            <div>${location}</div>\n            <div>${standardizePhoneNumber(properties.hotlineNumber)}</div>\n            <div>${link}</div>`)\n\n          .addTo(map);\n      }\n      return undefined;\n    });\n\n  }\n\n  addClickListener() {\n\n    const {\n      map\n    } = this;\n    const {\n      setLatLng,\n    } = this.props;\n    const layer = map.getLayer(LAYER_NAME);\n    if (!layer) {\n      return;\n    }\n    map.on('click', (e) => {\n      const features = map.queryRenderedFeatures(\n        e.point, {\n        layers: [LAYER_NAME],\n      },\n      );\n\n      if (features.length > 0) {\n        setLatLng({\n          center: {\n            lat: features[0].properties.lat,\n            lng: features[0].properties.lng,\n          },\n          usState: features[0].properties.state\n        });\n      }\n    });\n  }\n\n  hoverPoint(hoveredPinId) {\n    let layer = this.map.getLayer(LAYER_NAME);\n    if (!layer) {\n      return;\n    }\n    this.map.setFeatureState({\n      source: \"composite\",\n      sourceLayer: \"mutual_aid_networks\",\n      id: hoveredPinId\n    }, {\n      hover: true\n    });\n  };\n\n  unHoverPoint(hoveredPinId) {\n    let layer = this.map.getLayer(LAYER_NAME);\n    if (!layer) {\n      return;\n    }\n    this.map.setFeatureState({\n      source: \"composite\",\n      sourceLayer: \"mutual_aid_networks\",\n      id: hoveredPinId\n    }, {\n      hover: false\n    });\n  };\n\n  handleReset() {\n    const {\n      resetToDefaultView,\n    } = this.props;\n\n    resetToDefaultView();\n    this.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n  }\n\n  setInitialState() {\n    this.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n    document.getElementsByClassName('mapboxgl-ctrl-geocoder--input');\n    Array.from(document.getElementsByClassName('mapboxgl-ctrl-geocoder--input')).forEach(ele => {\n      ele.value = '';\n    })\n    this.map.resize();\n  }\n\n  handleClickOnInset(bounds, state) {\n    // this is for clicking on a state inset\n    this.setState({\n      bbox: bounds\n    })\n\n    this.props.setLatLng({\n      center: {},\n      usState: state\n    });\n  }\n\n  // Creates the button in our zoom controls to go to the national view\n  makeZoomToNationalButton() {\n    document.querySelector('.mapboxgl-ctrl-compass').remove();\n    if (document.querySelector('.mapboxgl-ctrl-usa')) {\n      document.querySelector('.mapboxgl-ctrl-usa').remove();\n    }\n    const usaButton = document.createElement('button');\n    usaButton.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-usa';\n    usaButton.innerHTML = '<span class=\"usa-icon\"></span>';\n\n    usaButton.addEventListener('click', this.handleReset);\n    document.querySelector('.mapboxgl-ctrl-group').appendChild(usaButton);\n  }\n\n  setFilters() {\n    const {\n      selectedCategories\n    } = this.props;\n    let layer = this.map.getLayer(LAYER_NAME);\n    if (!layer) {\n      return;\n    }\n    let filterArray = ['any', ...selectedCategories.map((category) => ['==', ['get', 'category'], category])];\n    this.map.setFilter(LAYER_NAME, filterArray);\n  }\n\n  initializeMap() {\n    const {\n      setLatLng,\n      resetToDefaultView\n    } = this.props;\n\n    mapboxgl.accessToken = accessToken;\n\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: mapboxStyle,\n    });\n\n    // Set Mapbox map controls\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.scrollZoom.disable();\n    this.map.dragRotate.disable();\n    this.map.touchZoomRotate.disableRotation();\n    this.makeZoomToNationalButton();\n    const {\n      map\n    } = this;\n    this.map.addControl(\n      new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl,\n        countries: 'us',\n        marker: false,\n        zoom: 12,\n        flyTo: false,\n      })\n        .on('clear', function (result) {\n          resetToDefaultView();\n        })\n        .on('result', function (returned) {\n          map.resize();\n          let usState = ''\n          // searched a us state\n          if (returned.result.place_type[0] === 'region') {\n            console.log(returned.result)\n            let usState = returned.result.properties['short_code'].split('-')[1];\n            return setLatLng({\n              center: {},\n              usState,\n            });\n          }\n          setLatLng({\n            center: {\n              lat: returned.result.center[1],\n              lng: returned.result.center[0]\n            },\n            usState,\n          });\n\n        }),\n      'top-left'\n    );\n    // map on 'load'\n    this.fitBounds([\n      [-128.8, 23.6],\n      [-65.4, 50.2]\n    ]);\n    this.map.on('load', () => {\n      this.addClickListener();\n      this.map.setPaintProperty(LAYER_NAME, 'circle-opacity', [\n        'case',\n        ['boolean', ['feature-state', 'hover'], false],\n        1,\n        0.5\n      ]);\n      this.map.setLayoutProperty(LAYER_NAME, 'visibility', 'visible')\n      this.addPopups(LAYER_NAME);\n    });\n  }\n\n  render() {\n    const {\n      center,\n      resetSelections,\n      setLatLng,\n      viewState,\n      networks,\n      selectedCategories,\n    } = this.props;\n    return (<React.Fragment>\n      <div id=\"map\"\n        className={\n          this.state.popoverColor\n        } >\n        <div className=\"map-overlay\"\n          id=\"legend\" >\n          <MapInset networks={\n            filter(networks, {\n              state: 'AK'\n            })\n          }\n            center={\n              center\n            }\n            stateName=\"AK\"\n            viewState={\n              viewState\n            }\n            resetSelections={\n              resetSelections\n            }\n            selectedCategories={\n              selectedCategories\n            }\n            setLatLng={\n              setLatLng\n            }\n            setBounds={\n              this.handleClickOnInset\n            }\n            mapId=\"map-overlay-alaska\"\n            bounds={\n              [\n                [-170.15625, 51.72702815704774],\n                [-127.61718749999999, 71.85622888185527]\n              ]\n            }\n          /> <MapInset networks={\n            filter(networks, {\n              state: 'HI'\n            })\n          }\n            stateName=\"HI\"\n            center={\n              center\n            }\n            viewState={\n              viewState\n            }\n            resetSelections={\n              resetSelections\n            }\n            selectedCategories={\n              selectedCategories\n            }\n            setLatLng={\n              setLatLng\n            }\n            setBounds={\n              this.handleClickOnInset\n            }\n            mapId=\"map-overlay-hawaii\"\n            bounds={\n              [\n                [-161.03759765625, 18.542116654448996],\n                [-154.22607421875, 22.573438264572406]\n              ]\n            }\n          /> </div> </div>\n\n    </React.Fragment>\n    );\n  }\n}\n\nMapView.propTypes = {\n  networks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setLatLng: PropTypes.func.isRequired,\n};\n\nMapView.defaultProps = {\n\n};\n\nexport default MapView;","import React from 'react';\nimport { Button } from 'antd';\nimport './style.scss';\n\nconst SubmitButton = (props) => {\n  const {\n    description,\n    link\n  } = props\n  return (\n    <div className=\"btn-container\">\n      <Button\n        id=\"submit-btn\" \n        target=\"blank\" \n        href={link}\n      >\n        {description}\n      </Button>\n    </div>\n  )\n};\n\nexport default SubmitButton;","import React from \"react\";\nimport { Checkbox } from 'antd';\nimport classNames from 'classnames';\nimport { options }  from '../../state/selections/reducers';\n\nimport './style.scss';\n\nconst CheckboxGroup = Checkbox.Group;\n\nclass Filters extends React.Component {\n    state = {\n        // checkedList: this.props.selectedCategories,\n        indeterminate: false,\n        checkAll: true,\n    };\n\n    onChange = checkedList => {\n        \n        this.props.setFilters(checkedList);\n        this.setState({\n            indeterminate: !!checkedList.length && checkedList.length < options.length,\n            checkAll: checkedList.length === options.length,\n        });\n    };\n\n    onCheckAllChange = e => {\n        const checkedList = e.target.checked ? options : [];\n        this.setState({\n            indeterminate: false,\n            checkAll: e.target.checked,\n        });\n        this.props.setFilters(checkedList);\n    };\n\n    render() {\n        if (!this.props.visible) {\n            return null;\n        }\n        return (\n            <div className={classNames(\"filter-container\", {'absolute-pos': this.props.absolute})}>\n                <div className=\"site-checkbox-all-wrapper\">\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        onChange={this.onCheckAllChange}\n                        checked={this.state.checkAll}\n                    >\n                        Select all\n                    </Checkbox>\n                </div>\n                <br />\n                <CheckboxGroup\n                    value={this.props.selectedCategories}\n                    onChange={this.onChange}\n                >\n                    {options.map((ele) => <Checkbox key={ele.replace(' ', '-').toLowerCase()} className={ele.replace(' ', '-').toLowerCase()} value={ele}>{ele}</Checkbox>)}\n                </CheckboxGroup>\n            </div>\n        );\n    }\n}\n\nexport default Filters;","import React from 'react';\nimport {\n  Card,\n  Row\n} from 'antd';\nimport './style.scss';\nimport { standardizePhoneNumber } from '../../utils/index'\n\n\nconst NetworkCard = (props) => {\n\n  const parseNetworks = (networks) => {\n    return networks.map(network => {\n      const {\n        address,\n        title,\n        neighborhood,\n        facebookPage,\n        hotlineNumber,\n        community,\n        language,\n        generalForm,\n        supportRequestForm,\n        supportOfferForm,\n        geocodeStatus,\n        state,\n        country,\n        id\n      } = network;\n      return (\n        <Card\n          className='network-card'\n          title={title}\n          key={id}\n          onMouseEnter={\n            () => props.setHoveredPoint(id)\n          }\n          onMouseLeave={\n            () => props.setHoveredPoint(null)\n          }\n        >\n          <ul className='list-inline'>\n            {geocodeStatus === \"hide city\" ? <li>{neighborhood || ''}, {state}, {country}</li>\n            : <>\n              {neighborhood && <li>{neighborhood}</li>}\n              {address && <li>{address}</li>}\n            </>}\n            {hotlineNumber && <li>{standardizePhoneNumber(hotlineNumber)}</li>}\n            {language && language.length ? <li>{language.join(', ')}</li> : null}\n            {community && <li>{community}</li>}\n          </ul>\n          <Row justify=\"space-between\" className='community-buttons'>\n            {generalForm && <a href={generalForm} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button text-general\">General</a>}\n            {supportRequestForm && <a href={supportRequestForm} rel=\"noopener noreferrer\" target=\"_blank\" className=\"button text-request-support\">Request help</a>}\n            {supportOfferForm && <a href={supportOfferForm} rel=\"noopener noreferrer\" target=\"_blank\" className=\"button text-offer-support\">Offer help</a>}\n            {facebookPage && <a href={facebookPage} rel=\"noopener noreferrer\" target=\"_blank\" className=\"button text-community\">Community</a>}\n          </Row>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <>\n      {parseNetworks(props.networks)}\n    </>\n  )\n}\n\nexport default NetworkCard\n","import React from 'react';\nimport { Typography } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport NetworkCard from '../NetworkCard'\nimport Filters from '../Filters';\nimport './style.scss';\n\nconst { Title } = Typography;\n\nconst NoNetworkSection = () => {\n  return (\n    <div className=\"no-network-section\">\n      <Title level={3}><InfoCircleOutlined /></Title>\n      <Title level={3}>There are no support requests or networks nearby.</Title> \n    </div>\n  )\n}\n\nconst ListView = ({\n    visibleCards,\n    setHoveredPoint,\n    setFilters,\n    selectedCategories\n  }) => {\n  return (\n      <div className=\"list-container\">\n        <Filters\n          setFilters={setFilters}\n          absolute={false}\n          selectedCategories={selectedCategories}\n          visible={true}\n        />\n        {visibleCards.length ?\n          <NetworkCard\n            setHoveredPoint={setHoveredPoint}\n            networks={visibleCards}\n          /> :\n          <NoNetworkSection />\n        }\n      </div>\n  )\n};\n\nexport default ListView;","import React from 'react'\nimport { Col, Row } from 'antd'\n\nimport './style.scss';\nimport eventMap from '../../assets/thp/eventMap.png'\nimport pledgeMap from '../../assets/thp/PledgeMap.png'\nimport thpLogo from '../../assets/thp/THP_logo_horizontal.png'\nimport th1 from '../../assets/thp/TH1.jpg'\nimport th2 from '../../assets/thp/TH2.jpg'\n\nconst About = (props) => {\n  return (\n    <div className='page-container'>\n      <a href='https://townhallproject.com/'>\n        <img src={thpLogo} alt='Town Hall Project logo' className='thpLogo'/>\n      </a>\n      <h2 className='title'>This site is built and maintained by <a href='https://townhallproject.com/'>Town Hall Project.</a></h2>\n      <div className='container'>\n        <p>\n          Town Hall Project is a 501(c)(3) non-profit organization dedicated to\n          lifting up the voices of Americans to lawmakers and other people in power.\n          We created Mutual Aid Hub to highlight the incredible work of mutual aid\n          organizers around the country, and to facilitate connections and shared\n          strategies in this growing movement of community support.\n        </p>\n\n        <div className='imageCollage'>\n          <Row>\n            <Col span={14}>\n              <img src={eventMap} alt='event map' className='map'/>\n            </Col>\n            <Col span={10}>\n              <img src={th1} alt='Town Hall meeting' className='hall'/>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={10}>\n            <img src={th2} alt='Town Hall meeting' className='hall'/>\n            </Col>\n            <Col span={14}>\n              <img src={pledgeMap} alt='pledge map' className='map'/>\n            </Col>\n          </Row>\n        </div>\n        \n        <p>\n          We do not directly organize or coordinate any individual mutual aid effort.\n          We do our best to curate and filter groups doing relevant, valuable work in\n          their communities, but we cannot verify or vouch for any network or individual\n          offerings. Please exercise all necessary judgement when interacting with\n          community members not previously known to you.\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","export const resourceList = [\n{\n    \"name\": \"AARP: How to Start a Mutual Aid Group\",\n    \"link\": \"https://aarpcommunityconnections.org/start-group/\"\n  },  \n{\n    \"name\": \"Database of Localized Resources During Corona Outbreak\",\n    \"link\": \"https://docs.google.com/spreadsheets/d/1HEdNpLB5p-sieHVK-CtS8_N7SIUhlMpY6q1e8Je0ToY/edit#gid=1604093003\"\n  },\n  {\n    \"name\": \"MUTUAL AID NYC: How to set up a Mutual Aid neighborhood group\",\n    \"link\": \"http://mutualaid.nyc/2020/03/29/how-to-set-up-a-mutual-aid-neighborhood-group-a-resource-list/\"\n  },\n  {\n    \"name\": \"Collective Care Is Our Best Weapon against COVID-19\",\n    \"link\": \"https://docs.google.com/document/d/1uP49OQGhosfBN4BOYQvyy_Mu3mpCSOYzip13LksC-S8/edit\"\n  },\n  {\n    \"name\": \"Neighborhood Pods How-To\",\n    \"link\": \"https://docs.google.com/document/d/1j8ADhLEuKNDZ1a_opmzudywJPKMXcNKu01V1xY2MiIA/preview\"\n  },\n  {\n    \"name\": \"Mutual Aid 101\",\n    \"link\": \"https://mutualaiddisasterrelief.org/wp-content/uploads/2020/04/NO-LOGOS-Mutual-Aid-101_-Toolkit.pdf\"\n  },\n  {\n    \"name\": \"Coronavirus Resource Kit\",\n    \"link\": \"https://docs.google.com/document/d/1Rcan4C_e6OBFBI5bUn7MtYK74Ab-WarxyJmDvZUI_YA/preview\"\n  },\n  {\n    \"name\": \"EFF: Keeping Each Other Safe When Virtually Organizing Mutual Aid\",\n    \"link\": \"https://www.eff.org/deeplinks/2020/03/keeping-each-other-safe-when-virtually-organizing-mutual-aid\"\n  },\n  {\n    \"name\": \"Pod Mapping for Mutual Aid\",\n    \"link\": \"https://docs.google.com/document/d/1-QfMn1DE6ymhKZMpXN1LQvD6Sy_HSnnCK6gTO7ZLFrE/mobilebasic\",\n  },\n  {\n    \"name\": \"Flyering for Neighborhood Support Networks Safely\",\n    \"link\": \"https://docs.google.com/document/d/1_ix4-qyf1qCZDpXAH98zOwL4irF00DvCXnFL-eT-DcU/edit\",\n  },\n  {\n    \"name\": \"COVID-19 Communication Symbols\",\n    \"link\": \"https://docs.google.com/document/d/1-Qh0YEj6_7pG6BTTGWN7EwYkfw2CfpRYheL8mzvk_ZU/edit\"\n  },\n  {\n    \"name\": \"MUTUAL AID ARLINGTON: How to Set Up a Mutual Aid Website\",\n    \"link\": \"https://mutualaidarlington.org/setup/#domain-name-forwarding---improve-your-web-address\",\n  },\n  {\n    \"name\": \"How to Make a Mutual Aid Map\",\n    \"link\": \"https://docs.google.com/document/d/1iG7A2UF87-vFOzl0mXEtJt-uf64c8AGvtdezxLfLWDU/edit?fbclid=IwAR2uKwUc22Fnxh1jJAgQZuu9NLIlC6JGJLT3-z3Xjam-DvWSihJOi5Sxdbc\",\n  },\n  {\n    \"name\": \"Safety Practices for Mutual Aid Food & Supply Distribution\",\n    \"link\": \"https://mutualaiddisasterrelief.org/wp-content/uploads/2020/03/COVID-SupplyDistro-MASafetyPracticesZine-WEB.pdf\",\n  },\n  {\n    \"name\": \"Free translation services for COVID-19 community projects\",\n    \"link\": \"https://www.creatingpuentes.com/\",\n   },\n  {\n    \"name\": \"Covid-19 Mutual Aid Slack\",\n    \"link\": \"https://docs.google.com/forms/d/e/1FAIpQLSec5f4MHWMJ68wKfrRW7qhAvmo1F7vcbnSBIbZhAezaGAL8kQ/viewform?fbclid=IwAR3YeWILV84Z83HeI6cDjTvDSTnNgH7ZDIjEksPYFm1iSxCu-XpJd6gtNgs\",\n   },\n  {\n    \"name\": \"Funds for Coronavirus Relief Efforts\",\n    \"link\": \"https://candid.org/explore-issues/coronavirus/funds\",\n    },\n]\n","import React from 'react'\nimport { List } from 'antd'\n\nimport './style.scss';\nimport { resourceList } from './constants'\nimport SubmitButton from '../SubmitButton'\n\nconst Resources = (props) => {\n  return (\n    <>\n      <div className='resources page-container'>\n        <h2 className='title'>Mutual Aid Resources</h2>\n        <p>\n          Starting your own Mutual Aid effort? Take a look at some of the invaluable resources community organizers have created:\n        </p>\n        <List\n          itemLayout='horizontal'\n          dataSource={resourceList}\n          renderItem={resource => (\n            <List.Item className='list'>\n              <List.Item.Meta\n                title={<a className='list-title' target='blank' href={resource.link}>{resource.name}</a>}\n              />\n            </List.Item>\n          )}\n        >\n        </List>\n        <p>\n          Thank you to all the mutual aid organizers, trainers, and other leaders out there doing this work and sharing best practices.\n        </p>\n      </div>\n      <SubmitButton\n        link='https://docs.google.com/forms/d/e/1FAIpQLScQOY2wlXUx7tM4R-DBZthp-H4LSSBMFs7wTvAi8xmamaB1fg/viewform'\n        description='Submit a Mutual Aid Resource'\n      />\n    </>\n  )\n}\n\nexport default Resources\n","import React from 'react'\nimport { Menu } from 'antd';\nimport { NavLink } from \"react-router-dom\";\n\nconst NavMenu = (props) => {\n  const {\n    handleNav,\n    mode,\n  } = props\n  return (\n    <>\n      <div className=\"logo\"></div>\n      <Menu\n        theme='dark'\n        style={{ lineHeight: '64px' }}\n        mode={mode}\n        onClick={handleNav}\n        selectedKeys={[window.location.pathname]}\n      >\n        <Menu.Item key=\"/\">\n          <NavLink to='/' exact>Map</NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"/table-view\">\n          <NavLink to='/table-view' exact>Table View</NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"/resources\">\n          <NavLink to='/resources' exact>Guides and Resources</NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"/about\">\n          <NavLink to='/about' exact>About</NavLink>\n        </Menu.Item>\n      </Menu>\n    </>\n  )\n}\n\nexport default NavMenu","import React from 'react'\nimport { Layout } from 'antd'\n\nconst { Footer } = Layout\n\nconst PageFooter = (props) => {\n  return (\n    <Footer style={{ textAlign: 'center' }}>\n      <div className=\"footer-text\">\n        <p>\n          We list these networks as a public resource. We cannot verify or vouch for any network\n          or individual offerings. Please exercise all necessary judgement when interacting with\n          community members not previously known to you.\n        </p>\n        <p>\n          This data set is made available under the <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://www.opendatacommons.org/licenses/pddl/1.0/\">Public Domain Dedication and License v1.0</a>.\n        </p>\n        <p>\n          This website is brought to you by <a href=\"https://townhallproject.com/\" rel=\"noopener noreferrer\" target=\"_blank\" >Town Hall Project</a>.\n          To report an error or other issue, please contact: <a href=\"mailto:info@townhallproject.com\">info@townhallproject.com</a>\n        </p>\n      </div>\n    </Footer>\n  )\n}\n\nexport default PageFooter\n","import React from 'react';\n\nexport default () => (\n        <div class=\"webGl-warning\" target=\"_blank\">\n            {/* <img class=\"webGl-compimg\" src=\"../Images/map/ohno-computer.png\"></img> */}\n            <p>Our interactive map feature uses WebGL, a plugin common in most modern browsers. Your browser does not have WebGL working currently.</p>\n            <p>You can learn how to enable WebGL on\n                        <a rel=\"noopener noreferrer\" href=\"https://get.webgl.org/\" target=\"_blank\"> this website.</a>\n            </p>\n        </div>)\n","import React, { useState } from 'react'\nimport { Button, Input, Table } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons';\n\nimport './style.scss';\n\nconst NetworksTable = (props) => {\n  const [searchCol, setSearchCol] = useState('')\n\n  const {\n    networks\n  } = props\n\n  const getColumnSearchProps = (dataIndex, description, secondaryDataIndex='') => ({\n    filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          placeholder={`Search ${description}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => handleSearch(confirm, dataIndex)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={clearFilters} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => {\n      if (secondaryDataIndex) {\n        return (\n          record[dataIndex].toLowerCase().includes(value.toLowerCase())\n          || record[secondaryDataIndex].toLowerCase().includes(value.toLowerCase())\n        )\n      } else {\n        return record[dataIndex].toLowerCase().includes(value.toLowerCase())\n      }\n    },\n    render: text => searchCol === dataIndex && text\n  })\n\n  const handleSearch = (confirm, dataIndex) => {\n    confirm();\n    setSearchCol(dataIndex)\n  }\n\n  const tableColumns = [\n    {\n      title: 'Organization',\n      width: '15vw',\n      fixed: 'left',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: (a,b) => a.title.localeCompare(b.title),\n      ...getColumnSearchProps('title', 'organizations'),\n      render: text => text,\n    },\n    {\n      title: 'City',\n      width: '20vw',\n      dataIndex: 'city',\n      key: 'city',\n      sorter: (a,b) => a.city.localeCompare(b.city),\n      ...getColumnSearchProps('city', 'cities'),\n      render: text => text,\n    },\n    {\n      title: 'State',\n      width: '10vw',\n      dataIndex: 'state',\n      key: 'state',\n      sorter: (a,b) => a.state.localeCompare(b.state),\n      defaultSortOrder: 'ascend',\n      ...getColumnSearchProps('state', 'states'),\n      render: text => text,\n    },\n    {\n      title: 'Languages',\n      width: '20vw',\n      dataIndex: 'language',\n      key: 'language',\n      sorter: (a,b) => a.language.localeCompare(b.language),\n      ...getColumnSearchProps('language', 'languages'),\n      render: text => text,\n    },\n    {\n      title: 'Get Involved',\n      width: '20vw',\n      filters: [\n        { text: 'General', value: 'generalForm'},\n        { text: 'Offer Support', value: 'supportOfferForm' },\n        { text: 'Request Support', value: 'supportRequestForm' },\n        { text: 'Community', value: 'facebookPage' },\n      ],\n      dataIndex: 'forms',\n      onFilter: (value, record) => record[value],\n      key: 'forms',\n      render: (form, record) => (\n        <ul key=\"resources\" className='resources'>\n          {record.generalForm && <li key={`${record.generalForm}-general`} className=\"form-link\"><Button ghost href={record.generalForm} target='blank' className='general'>General</Button></li>}\n          {record.supportOfferForm && <li key={`${record.supportOfferForm}-offer`} className=\"form-link\"><Button ghost href={record.supportOfferForm} target='blank' className='offer'>Offer Support</Button></li>}\n          {record.supportRequestForm && <li key={`${record.supportRequestForm}-request`} className=\"form-link\"><Button ghost href={record.supportRequestForm} target='blank' className='request'>Request Support</Button></li>}\n          {record.facebookPage && <li key={`${record.facebookPage}-facebook`} className=\"form-link\"><Button ghost href={record.facebookPage} target='blank' className='other'>Community</Button></li>}\n        </ul>\n      )\n    },\n  ]\n\n  return (\n    <>\n      <Table\n        rowKey={network => network.id}\n        columns={tableColumns}\n        dataSource={networks}\n        pagination={{pageSize: 20, hideOnSinglePage: true}}\n        scroll={{x: 768}}\n        size='small'\n      />\n    </>\n  )\n}\n\nexport default NetworksTable","import React from 'react';\nimport {\n  connect\n} from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Layout } from 'antd';\nimport {\n  MenuFoldOutlined,\n} from '@ant-design/icons';\n\nimport networkStateBranch from '../state/networks';\nimport selectionStateBranch from '../state/selections';\nimport MapView from '../components/Map';\nimport SubmitButton from '../components/SubmitButton';\nimport Filters from '../components/Filters';\nimport ListView from '../components/ListView';\nimport About from '../components/About';\nimport Resources from '../components/Resources'\nimport NavMenu from '../components/NavMenu'\nimport PageFooter from '../components/PageFooter'\n\nimport './style.scss';\nimport NoWebGl from '../components/NoWebGl';\nimport NetworksTable from '../components/NetworksTable';\n\nconst { Header, Content, Sider } = Layout;\nconst mapboxgl = window.mapboxgl;\nclass DefaultLayout extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isMobile: false,\n      collapsed: true,\n    }\n  }\n\n  componentDidMount() {\n    const {\n      requestNetworks\n    } = this.props;\n    requestNetworks();\n    this.checkIfMobile();\n    window.addEventListener('resize', this.checkIfMobile);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkIfMobile);\n  }\n\n  handleNav = (e) => {\n    const {\n      resetToDefaultView\n    } = this.props\n    if (this.state.isMobile) this.setState({collapsed: true});\n    resetToDefaultView();\n  }\n\n  toggleCollapsibleMenu = () => {\n    this.setState({collapsed: !this.state.collapsed})\n  }\n\n  checkIfMobile = () => {\n    window.innerWidth <= 768 ? this.setState({isMobile: true}) : this.setState({isMobile: false})\n  }\n\n  renderPageHeader = () => {\n    if (!this.state.isMobile) {\n      return (\n        <Header>\n          <NavMenu\n            mode='horizontal'\n            handleNav={this.handleNav}\n          />\n        </Header>\n      )\n    } else if (this.state.collapsed) {\n      return (\n        <Header onClick={this.toggleCollapsibleMenu}>\n          <MenuFoldOutlined className='menu-btn'/>\n        </Header>\n      )\n    } else {\n      return (\n        <Sider trigger={null}>\n          <NavMenu\n            mode='inline'\n            handleNav={this.handleNav}\n          />\n        </Sider>\n      )\n    }\n  }\n\n  render() {\n    const {\n      setFilters,\n      selectedCategories,\n      filteredNetworks,\n      viewState,\n      setLatLng,\n      setUsState,\n      visibleCards,\n      allNetworks,\n      setHoveredPoint,\n      hoveredPointId,\n      masterBbox,\n      resetToDefaultView\n    } = this.props;\n    \n    if (!allNetworks.length) {\n      return null;\n    }\n    // viewState --> list or default\n    return (\n      <Router>\n        <Layout className=\"layout\">\n          {this.renderPageHeader()}\n          <Layout>\n            <Content style={{ padding: '0 50px' }}>\n              <div className=\"main-container\">\n                <Switch>\n                  <Route path='/table-view'>\n                    <NetworksTable networks={allNetworks} />\n                  </Route>\n                  <Route path='/about'>\n                    <About />\n                  </Route>\n                  <Route path='/resources'>\n                    <Resources />\n                  </Route>\n                  <Route path='/'>\n                    {mapboxgl.supported() ? <>\n                      <Filters\n                        setFilters={setFilters}\n                        selectedCategories={selectedCategories}\n                        absolute={true}\n                        visible={viewState ==='default'}\n                      />\n                      <div className={`interactive-content-${viewState}`}>\n                        <MapView\n                          networks={filteredNetworks}\n                          viewState={viewState}\n                          setLatLng={setLatLng}\n                          selectedCategories={selectedCategories}\n                          resetToDefaultView={resetToDefaultView}\n                          hoveredPointId={hoveredPointId}\n                          setHoveredPoint={setHoveredPoint}\n                          bbox={masterBbox}\n                          setUsState={setUsState}\n                        />\n                        <ListView\n                          visibleCards={visibleCards}\n                          setHoveredPoint={setHoveredPoint}\n                          setFilters={setFilters}\n                          selectedCategories={selectedCategories}\n                        />\n                      </div>\n                    </>: <NoWebGl />}\n                    <div className=\"tagline\">\n                      Find Mutual Aid Networks and other community self-support projects near you. Reach out to these\n                      groups directly via the map above to get involved, offer resources, or submit needs requests.\n                    </div>\n                    <SubmitButton\n                      link='https://docs.google.com/forms/d/e/1FAIpQLScuqQtCdKsDzvTzaA2PMyVHX7xcOqbOW7N7l_0YJASV4wMBVQ/viewform'\n                      description='Submit a Mutual Aid Network'\n                    />\n                  </Route>\n                </Switch>\n              </div>\n            </Content>\n            <PageFooter />\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filteredNetworks: networkStateBranch.selectors.getFilteredNetworks(state),\n  selectedCategories: selectionStateBranch.selectors.getSelectedCategories(state),\n  viewState: selectionStateBranch.selectors.getViewState(state),\n  searchLocation: selectionStateBranch.selectors.getSearchLocation(state),\n  visibleCards: networkStateBranch.selectors.getVisibleCards(state),\n  allNetworks: networkStateBranch.selectors.getAllNetworks(state),\n  hoveredPointId: selectionStateBranch.selectors.getHoveredPointId(state),\n  masterBbox: networkStateBranch.selectors.getBoundingBox(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestNetworks: () => dispatch(networkStateBranch.actions.requestNetworks()),\n  setFilters: (payload) => dispatch(selectionStateBranch.actions.setCategoryFilters(payload)),\n  setLatLng: (payload) => dispatch(selectionStateBranch.actions.setLatLng(payload)),\n  setHoveredPoint: (payload) => dispatch(selectionStateBranch.actions.setHoveredPoint(payload)),\n  setUsState: (payload) => dispatch(selectionStateBranch.actions.setUsState(payload)),\n  resetToDefaultView: () => dispatch(selectionStateBranch.actions.resetToDefaultView())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'iframe-resizer';\n\nimport configureStore from './state/store';\n// Containers\nimport DefaultLayout from './containers/DefaultLayout';\nimport './index.css';\n\n// Bootstrap the store\nvar Store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <DefaultLayout />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}